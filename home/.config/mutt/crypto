# OpenGPG-related configuration #

# Include distributions base configuration
source /etc/Muttrc.gpg.dist

# Support old-style/inline PGP encrypted messages
message-hook '!(~g|~G) ~b"^-----BEGIN\ PGP\ (SIGNED\ )?MESSAGE"' "exec check-traditional-pgp"

# Also encrypt messages to myself, so I can read the copy I keep.
set pgp_encrypt_only_command="pgpewrap gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust --encrypt-to 0x2B98C0CD -- -r %r -- %f"
set pgp_encrypt_sign_command="pgpewrap gpg --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust --encrypt-to 0x2B98C0CD -- -r %r -- %f"

# uid to use when encrypting/signing
set pgp_sign_as = 0x2B98C0CD

# The number of seconds to keep in memory the passpharse used to encrypt/sign
# the more the less secure it will be.
# Is this relevant when using gpg-agent?
set pgp_timeout=21600

# It's a regexp used against the GPG output: if it matches some line of the output
# then mutt considers the message a good signed one (ignoring the GPG exit code).
set pgp_good_sign="^gpg: Good signature from"

# mutt uses by default PGP/GPG to sign/encrypt messages
# if you want to use S-mime instead set the smime_is_default variable to yes

set crypt_autosign = yes	      # Automatically sign all outgoing messages.
set crypt_opportunistic_encrypt = yes # Encrypt email if there's a key for the recipient.

set pgp_show_unusable = no  # Don't show unusable keys.
set pgp_use_gpg_agent = yes # Use gpg-agent.
