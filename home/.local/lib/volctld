#!/bin/sh
#
# Displays a notification with volume changes.
#
# Listenes to events from the pulseaudio server, and shows a notification when
# volume changes occurr.
#
# There's an assumption that only one output device and only one input device
# are active at a given time. If that's not you're case, you're gonna have to
# tinker with this.
#
# The same notification is updated in-place. This is done with "synchronous
# hints", which are supported by dunst, mako (unrelease version), canonical's
# notification daemon, and possibly others.
#
# TODO: Might want to rewrite this into a more-efficient binary:
# https://github.com/jnqnfe/pulse-binding-rust
# https://pypi.org/project/pulsectl/

set -e

show() {
  VOLUME=$(ponymix get-volume)
  MICVOL=$(ponymix --source get-volume)

  # Device names without the trailing "Analog Stereo":
  SINK_NAME=$(ponymix --short --sink | grep sink | cut -f 4 | cut -d" " -f -2)
  SOURCE_NAME=$(ponymix --short --source | grep source | cut -f 4 | cut -d" " -f -2)

  if ponymix --sink is-muted; then
    SINK="  $VOLUME% $SINK_NAME (muted)"
  else
    SINK="  $VOLUME% $SINK_NAME"
  fi

  if ponymix --source is-muted; then
    SOURCE="  $MICVOL% $SOURCE_NAME (muted)"
  else
    SOURCE="  $MICVOL% $SOURCE_NAME"
  fi

  notify-send \
    --app-name volctl \
    --urgency=low \
    --expire-time=3000 \
    --hint=int:transient:1 \
    --hint=int:value:"$VOLUME" \
    --hint=string:x-dunst-stack-tag:volctl \
    --hint=string:x-canonical-private-synchronous:volctl \
    "Volume changed" \
    "$SINK\n$SOURCE"
}

pactl subscribe | /usr/bin/grep --line-buffered "'change' on sink" |
  while read -r _; do
    show &
  done
exit
