#!/bin/bash
# This script loads a kernel from the GRUB menu and reboots.
# The error checking is very basic.
# Written by Isaac G, 2010

die ()
{
   tput setaf 1 # Red text
   echo "Error: $@" >&2
   tput sgr0 # Reset
   exit 1
}
 
(( UID != 0 )) && die "You need to be superuser"
unset number

# Use the first parameter or show a menu if none is specified
if [[ $1 ]] ; then
   # Make sure the selected number is an integer
   [[ $1 = *[^0-9]* ]] && die "The selected parameter is not a number"
   number=$1
else
   # Nothing selected; pull up a list of options from the grub menu
   oldIFS="$IFS"
   IFS=$'\n'

   # Get the titles
   options=( $(awk '$1 == "title" {for (i = 2; i <= NF; i++) printf "%s ", $i; printf "\n";}' /boot/grub/menu.lst ) )

   # Ask the user to select one
   select title in "${options[@]}" ; do
       for ((i = 0; i < ${#options[@]}; i++)); do
           [[ $title == "${options[i]}" ]] && number=$((i + 1)) && break
       done
       [[ $number ]] && break
   done

   IFS="$oldIFS"
fi

unset kernel
unset initrd
unset append
item=0

# Parse the grub menu.lst
while read key val extra; do
   [[ $key = "title" ]] && ((item++)) # Count the number of title's
   (( item == number )) || continue   # Wait until the right number
   [[ $key = "kernel" ]] && kernel="$val" && append="$extra"
   [[ $key = "initrd" ]] && initrd="$val"
done < /boot/grub/menu.lst

[[ $kernel ]] || die "No such kernel with that number"

# http://stackoverflow.com/questions/2167558/give-the-mount-point-of-a-path
root="$(df /boot | tail -n 1 | awk '{ print $NF}')"

set -- "$root$kernel"
[[ -n "${initrd+set}" ]] && set -- "$@" --initrd="$root$initrd"
set -- "$@" --append="$append"
kexec "$@"
